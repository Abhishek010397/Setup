---

  - local_action: file path={{inventory_dir}}/registry state=directory

  - local_action: stat path={{inventory_dir}}/registry/domain.crt
    register: local_certificate

  - name: copy openssl configuration for RedHat
    shell: cp /etc/pki/tls/openssl.cnf /tmp/openssl.cnf
    become: yes
    when: not local_certificate.stat.exists and ansible_os_family == "RedHat"

  - name: copy openssl configuration for Debian
    shell: cp /usr/local/ssl/openssl.cnf /tmp/openssl.cnf
    become: yes
    when: not local_certificate.stat.exists and ansible_os_family == "Debian"

  - name: update openssl configuration
    shell: sed -i "/\[ v3_ca \]/a subjectAltName = IP:{{docker.registry.ip}}" /tmp/openssl.cnf
    become: yes
    when: not local_certificate.stat.exists

  - name: create server key and certificate
    shell: openssl req -config /tmp/openssl.cnf -newkey rsa:2048 -nodes -x509 -subj "/C=/ST=/L=/O=/CN={{docker.registry.host}}" -days 365 -keyout /tmp/domain.key -out /tmp/domain.crt
    become: yes
    when: not local_certificate.stat.exists

  - name: download server key and certificate
    fetch: src=/tmp/{{item}} dest={{inventory_dir}}/registry/ flat=yes
    with_items:
      - domain.crt
      - domain.key
    when: not local_certificate.stat.exists

  - copy: src={{inventory_dir}}/registry/domain.{{item}} dest=/etc/nginx/certs/{{docker.registry.host}}.{{item}}
    become: yes
    with_items:
      - key
      - crt

  - copy: src={{inventory_dir}}/registry/domain.crt dest=/usr/local/share/ca-certificates/{{docker.registry.host}}.crt
    become: yes
    when: ansible_os_family == "Debian"

  - shell: update-ca-certificates
    become: yes
    when: ansible_os_family == "Debian"

  - copy: src={{inventory_dir}}/registry/domain.crt dest=/etc/pki/ca-trust/source/anchors/{{docker.registry.host}}.crt
    become: yes
    when: ansible_os_family == "RedHat"

  - shell: update-ca-trust
    become: yes
    when: ansible_os_family == "RedHat"

  - file: path=/etc/docker/certs.d/{{docker.registry.host}} state=directory
    become: yes

  - copy: src={{inventory_dir}}/registry/domain.crt dest=/etc/docker/certs.d/{{docker.registry.host}}/ca.crt
    become: yes
    notify: restart docker
